import 'dart:ui';

import 'package:flutter/material.dart';

class CustomValidate extends StatefulWidget {
  const CustomValidate({Key? key}) : super(key: key);

  @override
  _CustomValidateState createState() => _CustomValidateState();
}

class _CustomValidateState extends State<CustomValidate> {
  TextEditingController _emailController = TextEditingController();
  TextEditingController _passwordController = TextEditingController();
  String emailError = '';
  String passwordError = '';

  @override
  void initState() {
    _emailController.text = '';
    _passwordController.text = '';
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Login Page"),
        centerTitle: true,
        backgroundColor: Colors.teal,
      ),
      body: Container(
        //padding: EdgeInsets.only(left: 20, right: 20, top: 10),
        decoration: BoxDecoration(
          gradient: LinearGradient(
              begin: Alignment.bottomRight,
              end: Alignment.topLeft,
              colors: [
                Colors.teal,
                Colors.yellow,
                Colors.white,
              ]),
        ),
        child: ListView(
          children: [
            Column(
              //mainAxisAlignment: MainAxisAlignment.center,
              children: [
                SizedBox(
                  height: 80,
                ),
                FlutterLogo(
                  size: 90,
                ),
                Container(
                  margin: EdgeInsets.only(left: 20, right: 20, top: 20),
                  //padding: EdgeInsets.symmetric(vertical: 20),
                  child: TextFormField(
                    controller: _emailController,
                    decoration: InputDecoration(
                        labelText: "Email",
                        labelStyle: TextStyle(
                            fontSize: 15,
                            fontWeight: FontWeight.bold,
                            color: Colors.teal),
                        hintText: 'Enter Email',
                        hintStyle: TextStyle(color: Colors.black38),
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(15))),
                  ),
                ),
                Container(
                  width: double.infinity,
                  margin: EdgeInsets.only(left: 30),
                  padding: EdgeInsets.symmetric(vertical: 5),
                  child: Text(
                    "$emailError",
                    style: TextStyle(color: Colors.red),
                  ),
                ),
                Container(
                  margin: EdgeInsets.symmetric(horizontal: 20, vertical: 20),
                  // padding: EdgeInsets.symmetric(vertical: 20),
                  child: TextFormField(
                    controller: _passwordController,
                    decoration: InputDecoration(
                        labelText: "Password",
                        labelStyle: TextStyle(
                            fontSize: 15,
                            fontWeight: FontWeight.bold,
                            color: Colors.teal),
                        hintText: 'Enter Password',
                        hintStyle: TextStyle(color: Colors.black38),
                        border: OutlineInputBorder(
                            borderRadius:
                                BorderRadius.all(Radius.circular(15)))),
                    validator: (pass) {
                      if (pass!.isEmpty) {
                        return "Field cant be empty";
                      }
                      return null;
                    },
                  ),
                ),
                ElevatedButton(
                  onPressed: submit,
                  child: Text("Login"),
                ),
              ],
            ),
          ],
        ),
      ),
      drawer: Drawer(
        child: Column(
          children: [
            Container(
              child: Padding(
                padding: const EdgeInsets.all(14.0),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  mainAxisAlignment: MainAxisAlignment.spaceEvenly,
                  children: [
                    Container(
                      height: 70,
                      width: 60,
                      decoration: BoxDecoration(
                        shape: BoxShape.circle,
                        image: DecorationImage(
                            image: NetworkImage(
                                'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ93PIG4I-IercCEUd5t2woZzoZWSh452NzAdiG7C_lDIq0tBPIgvjZFvG63NleH4bmEiw&usqp=CAU'),
                            fit: BoxFit.fill),
                      ),
                    ),
                    Text(
                      "Prashant",
                      style:
                          TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
                    ),
                    Text("prashantpokiya33333@gamil.com"),
                  ],
                ),
              ),
              height: 180,
              width: double.infinity,
              //color: Colors.indigoAccent,
              decoration: BoxDecoration(
                image: DecorationImage(
                    image: NetworkImage(
                        'https://cdn-prod.medicalnewstoday.com/content/images/articles/325/325466/man-walking-dog.jpg'),
                    fit: BoxFit.cover),
              ),
            ),
          ],
        ),
      ),
    );
  }

  void submit() {
    if (validate()) {
      print(_emailController.text);
      print(_passwordController.text);
    }
  }

  bool isEmail(String em) {
    String p =
        r'^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$';

    return RegExp(p).hasMatch(em);
  }

  bool validate() {
    if (_emailController.text == '') {
      setState(() {
        emailError = "Empty field";
      });
      return false;
    }
    if (!isEmail(_emailController.text)) {
      setState(() {
        emailError = "Enter Valid email ðŸ˜ƒ";
      });
      return false;
    }

    return true;
  }
}